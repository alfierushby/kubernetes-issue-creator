apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Namespace }}-{{ .Release.Name}}
  namespace: {{ .Release.Namespace }}
  labels:
    app: {{ .Release.Namespace }}-{{ .Release.Name}}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: {{ .Release.Name}}
  template:
    metadata:
       labels:
        app: {{ .Release.Name}}
    spec:
      serviceAccountName: sqs-write
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchLabels:
                  app: {{ .Release.Namespace }}-{{ .Release.Name}}
              topologyKey: "kubernetes.io/hostname"
      topologySpreadConstraints:
        - maxSkew: 1
          topologyKey: "kubernetes.io/hostname"
          whenUnsatisfiable: ScheduleAnyway
          labelSelector:
            matchLabels:
              app: {{ .Release.Namespace }}-{{ .Release.Name}}
      containers:
      - name: {{ .Release.Namespace }}-{{ .Release.Name}}
        image: {{ .Values.frontendECRUrl }}:{{ .Values.imageTag }}
        imagePullPolicy: Always
        ports:
        - containerPort: 8000
        resources:
          requests:
            cpu: "100m"
            memory: "128Mi"
          limits:
            cpu: "250m"
            memory: "256Mi"
        env:
        - name: AWS_REGION
          valueFrom:
            configMapKeyRef:
              name: frontend-config
              key: AWS_REGION
        - name: P1_QUEUE_URL
          valueFrom:
            secretKeyRef:
              name: frontend-secrets
              key: P1_QUEUE_URL
        - name: P2_QUEUE_URL
          valueFrom:
            secretKeyRef:
              name: frontend-secrets
              key: P2_QUEUE_URL
        - name: P3_QUEUE_URL
          valueFrom:
            secretKeyRef:
              name: frontend-secrets
              key: P3_QUEUE_URL